#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
    tapping-term-ms = <400>;
    quick-tap-ms = <100>;
};

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;

            // <---[[moderate duration]]

            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    /* ─────────────────────────────────── Combos ─────────────────────────────────── */
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <30>;               /* J + K → Esc */
            key-positions = <34 33>;         /* Adjust if matrix differs */
            bindings = <&kp ESCAPE>;
        };

        combo_save {
            timeout-ms = <40>;               /* S + D → :w */
            key-positions = <18 19>;
            bindings = <&macro_save>;
        };

        combo_vsplit {
            timeout-ms = <40>;               /* C + V → :vsplit */
            key-positions = <26 27>;
            bindings = <&macro_vsplit>;
        };

        combo_noh {
            timeout-ms = <40>;               /* N + M → :noh */
            key-positions = <45 46>;
            bindings = <&macro_noh>;
        };
    };

    macros {


        macro_vim_save: vim_save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <5>;
            bindings = <&kp ESCAPE &kp COLON &kp W &kp ENTER>;
            label = "VIM_SAVE";
        };

        macro_vim_replace: replace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp COLON &kp PERCENT &kp S &kp SLASH>;
            label = "REPLACE";
        };

        macro_vsplit: macro_vsplit {
            bindings = <&str ":vsplit" &kp ENTER>;
        };

        macro_noh: macro_noh {
            bindings = <&str ":noh" &kp ENTER>;
        };
    };

    /* ─────────────────────── Layer aliases for readability ─────────────────────────── */
    &layers {
        default_layer: BASE {};
        nav_layer:     NAV  {};
        num_layer:     NUM  {};
        sym_layer:     SYM  {};
        sys_layer:     SYS  {};
    };

    /* ────────────────────────── Helper key aliases ─────────────────────────────────── */
    #define HM_A  &hm LCTRL  A
    #define HM_S  &hm LALT   S
    #define HM_D  &hm LGUI   D
    #define HM_F  &hm LSHFT  F
    #define HM_J  &hm RSHFT  J
    #define HM_K  &hm RGUI   K
    #define HM_L  &hm LALT   L
    #define HM_SC &hm RCTRL  SEMICOLON

    #define LT_NAV &lt NAV  SPACE
    #define LT_SYM &lt SYM  BACKSPACE
    #define LT_NUM &lt NUM  ENTER
    #define LT_SYS &lt SYS  LEFT_SHIFT

    keymap {
        compatible = "zmk,keymap";

        /*
       * ───────────────────────────────── BASE ──────────────────────────────────
       * Visual reference (tap shown – hold = mod/layer):
       * `  1  2  3  4  5                6  7  8  9  0  '
       * TAB Q  W  E  R  T             Y  U  I  O  P  -
       * ESC A⌃ S⌥ D⌘ F⇧ G             H  J⇧ K⌘ L⌥ ;⌃ = ESC
       * CTRL Z  X  C  V  B DEL   BSPC N  M  ,  .  /  RCTRL
       *     GUI ALT SPC NAV SYS NUM   NUM SYS NAV ALT GUI
       */

          BASE {
              bindings = <
                  &kp GRAVE      &kp N1   &kp N2   &kp N3   &kp N4   &kp N5                                 &kp N6   &kp N7   &kp N8   &kp N9   &kp N0   &kp SQT
                  &kp TAB        &kp Q    &kp W    &kp E    &kp R    &kp T                                  &kp Y    &kp U    &kp I    &kp O    &kp P    &kp MINUS
                  &kp ESCAPE     HM_A     HM_S     HM_D     HM_F     &kp G                                  &kp H    HM_J    HM_K    HM_L    HM_SC   &kp EQUAL
                  &kp LCTRL      &kp Z    &kp X    &kp C    &kp V    &kp B      &kp DELETE        &kp BSPC   &kp N    &kp M    &kp COMMA &kp DOT  &kp FSLH &kp RCTRL
                                          &kp LGUI &kp LALT LT_NAV  LT_SYS  LT_NUM                LT_NUM  LT_SYS  LT_NAV  &kp RALT &kp RGUI
              >;
              sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
          };

          /* ───────────────────────────────── NAV ────────────────────────────────── */
          NAV {
            bindings = <
                &kp ESCAPE   &kp HOME   &kp UP     &kp PG_UP  &kp END   &none                         &none   &none   &none   &none   &none   &none
                &none        &none      &kp UP     &none      &none     &none                         &none   &kp PG_UP &kp UP  &none   &none   &none
                &none        &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT &none                         &kp LEFT &kp DOWN &kp UP   &kp RIGHT &none  &kp ESCAPE
                &none        &kp C_LEFT &kp C_DOWN &kp C_UP   &kp C_RIGHT &none   &none   &none       &none   &kp C_LEFT &kp C_DOWN &kp C_RIGHT &none &none
                                              &none &none &none &none &none                       &none &none &none &none &none
            >;
            sensor-bindings = <&inc_dec_kp C_SCROLL_UP C_SCROLL_DOWN>;
          };

          /* ───────────────────────────────── NUM ────────────────────────────────── */
          NUM {
              bindings = <
                  &none &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                               &kp F6  &kp F7  &kp F8  &kp F9  &kp F10 &kp PRINTSCREEN
                  &none &none   &none   &none   &none   &none                               &kp ASTERISK &kp N7 &kp N8 &kp N9 &kp PLUS &none
                  &none &none   &none   &none   &none   &none                               &kp SLASH  &kp N4 &kp N5 &kp N6 &kp MINUS &none
                  &none &none   &none   &none   &none   &none   &none &none                &none &kp N1 &kp N2 &kp N3 &kp EQUAL &none
                          &none &none &none &none &none                               &none &none &none &none &kp N0
              >;
              sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
          };

          /* ───────────────────────────────── SYM ────────────────────────────────── */
          SYM {
              bindings = <
                  &none           &none       &none      &none       &none          &none                           &none         &none      &none        &none             &none          &none
                  &none           &kp APOS    &kp DQT    &kp ASTRK   &kp LT         &kp GT                         &kp AMPERSAND &kp TILDE  &kp LBKT     &kp RBKT          &kp PERC       &none
                  &macro_save     &none       &kp EXCL   &kp MINUS   &kp PLUS       &kp EQUAL    &kp HASH                         &kp PIPE    &kp COLON     &kp LPAR            &kp RPAR        &kp QMARK     &none   &none
                  &none           &kp CARET   &kp COMMA  &kp DOT     &kp BSLH       &kp GRAVE    &none   &none     &none         &none      &kp SLASH     &kp DOLLAR         &kp LBRACE      &kp RBRACE    &kp AT     &none
                                                 &none     &none      &none       &none         &none                           &none         &none      &none        &none             &none
              >;
              sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
          };

        /* ───────────────────────────────── SYS ────────────────────────────────── */
        SYS {
            bindings = <
                &none &none &none &none &none &none                         &none &none &none &none &none &none
                &none &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                    &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
                &none &none &none &none &none &none                         &none &none &none &none &none &RESET
                &none &none &none &none &none &none &none &none             &none &none &none &none &none &none &none
                         &none &none &none &none &none                   &none &none &none &none &none
            >;
            sensor-bindings = <&inc_dec_kp C_NEXT C_PREVIOUS>;
        };    
    };
};
